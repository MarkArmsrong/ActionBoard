@model ActionBoard.Models.KanbanViewModel

@{
    ViewData["Title"] = "Kanban Board";
}

<div class="space-y-6">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-900">Kanban Board</h1>
        <div class="flex space-x-4 mr-4">
            <a asp-action="Index" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                List View
            </a>
            <a asp-action="Create" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                Add New Todo
            </a>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <!-- Todo Column -->
        <div class="bg-gray-50 rounded-lg p-4" id="todo-column" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">To Do</h2>
            <div class="space-y-4">
                @foreach (var todo in Model.Todo)
                {
                    <div class="bg-white rounded-lg shadow p-4 cursor-move" draggable="true" ondragstart="drag(event)" data-todo-id="@todo.Id">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h3 class="text-sm font-medium text-gray-900">@todo.Title</h3>
                                @if (!string.IsNullOrEmpty(todo.Description))
                                {
                                    <p class="mt-1 text-sm text-gray-500">@todo.Description</p>
                                }
                                <p class="mt-1 text-xs text-gray-400">Created: @todo.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="flex space-x-2">
                                <form asp-action="ToggleComplete" asp-route-id="@todo.Id" method="post" class="inline">
                                    <button type="submit" class="text-green-600 hover:text-green-900">
                                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                                <form asp-action="Delete" asp-route-id="@todo.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="text-red-600 hover:text-red-900">
                                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- In Progress Column -->
        <div class="bg-gray-50 rounded-lg p-4" id="inprogress-column" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">In Progress</h2>
            <div class="space-y-4">
                @foreach (var todo in Model.InProgress)
                {
                    <div class="bg-white rounded-lg shadow p-4 cursor-move" draggable="true" ondragstart="drag(event)" data-todo-id="@todo.Id">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h3 class="text-sm font-medium text-gray-900">@todo.Title</h3>
                                @if (!string.IsNullOrEmpty(todo.Description))
                                {
                                    <p class="mt-1 text-sm text-gray-500">@todo.Description</p>
                                }
                                <p class="mt-1 text-xs text-gray-400">Created: @todo.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="flex space-x-2">
                                <form asp-action="ToggleComplete" asp-route-id="@todo.Id" method="post" class="inline">
                                    <button type="submit" class="text-green-600 hover:text-green-900">
                                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                                <form asp-action="Delete" asp-route-id="@todo.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="text-red-600 hover:text-red-900">
                                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Completed Column -->
        <div class="bg-gray-50 rounded-lg p-4" id="completed-column" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">Completed</h2>
            <div class="space-y-4">
                @foreach (var todo in Model.Completed)
                {
                    <div class="bg-white rounded-lg shadow p-4 cursor-move" draggable="true" ondragstart="drag(event)" data-todo-id="@todo.Id">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h3 class="text-sm font-medium text-gray-900 line-through text-gray-500">@todo.Title</h3>
                                @if (!string.IsNullOrEmpty(todo.Description))
                                {
                                    <p class="mt-1 text-sm text-gray-500">@todo.Description</p>
                                }
                                <p class="mt-1 text-xs text-gray-400">Created: @todo.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="flex space-x-2">
                                <form asp-action="ToggleComplete" asp-route-id="@todo.Id" method="post" class="inline">
                                    <button type="submit" class="text-gray-400 hover:text-gray-600">
                                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                                <form asp-action="Delete" asp-route-id="@todo.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="text-red-600 hover:text-red-900">
                                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.dataset.todoId);
        }

        function drop(ev) {
            ev.preventDefault();
            const todoId = ev.dataTransfer.getData("text");
            const targetColumn = ev.target.closest('[id$="-column"]');
            
            if (!targetColumn) return;

            const status = targetColumn.id.replace('-column', '');
            updateTodoStatus(todoId, status);
        }

        function updateTodoStatus(todoId, status) {
            fetch(`/Todo/UpdateStatus/${todoId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                }
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
} 