@model ActionBoard.Models.KanbanViewModel

@{
    ViewData["Title"] = "Kanban Board";
}

@Html.AntiForgeryToken()

<div class="kanban-container">
    <div class="kanban-header">
        <h1 class="kanban-title">Kanban Board</h1>
        <div class="kanban-actions">
            <a asp-action="Index" class="btn-list-view">
                List View
            </a>
            <a asp-action="Create" class="btn-add-kanban">
                Add New Todo
            </a>
        </div>
    </div>

    <div class="kanban-grid">
        <!-- Todo Column -->
        <div class="kanban-column" id="todo-column" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2 class="kanban-column-title">To Do</h2>
            <div class="kanban-items">
                @foreach (var todo in Model.Todo)
                {
                    <div class="kanban-item" draggable="true" ondragstart="drag(event)" data-todo-id="@todo.Id">
                        <div class="kanban-item-content">
                            <div class="kanban-item-details">
                                <h3 class="kanban-item-title">@todo.Title</h3>
                                @if (!string.IsNullOrEmpty(todo.Description))
                                {
                                    <p class="kanban-item-description">@todo.Description</p>
                                }
                                <p class="kanban-item-date">Created: @todo.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="kanban-item-actions">
                                <form asp-action="ToggleComplete" asp-route-id="@todo.Id" method="post" class="inline">
                                    <button type="submit" class="btn-complete">
                                        <svg class="kanban-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                                <form asp-action="Delete" asp-route-id="@todo.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-delete-kanban">
                                        <svg class="kanban-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- In Progress Column -->
        <div class="kanban-column" id="inprogress-column" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2 class="kanban-column-title">In Progress</h2>
            <div class="kanban-items">
                @foreach (var todo in Model.InProgress)
                {
                    <div class="kanban-item" draggable="true" ondragstart="drag(event)" data-todo-id="@todo.Id">
                        <div class="kanban-item-content">
                            <div class="kanban-item-details">
                                <h3 class="kanban-item-title">@todo.Title</h3>
                                @if (!string.IsNullOrEmpty(todo.Description))
                                {
                                    <p class="kanban-item-description">@todo.Description</p>
                                }
                                <p class="kanban-item-date">Created: @todo.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="kanban-item-actions">
                                <form asp-action="ToggleComplete" asp-route-id="@todo.Id" method="post" class="inline">
                                    <button type="submit" class="btn-complete">
                                        <svg class="kanban-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                                <form asp-action="Delete" asp-route-id="@todo.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-delete-kanban">
                                        <svg class="kanban-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Completed Column -->
        <div class="kanban-column" id="completed-column" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2 class="kanban-column-title">Completed</h2>
            <div class="kanban-items">
                @foreach (var todo in Model.Completed)
                {
                    <div class="kanban-item" draggable="true" ondragstart="drag(event)" data-todo-id="@todo.Id">
                        <div class="kanban-item-content">
                            <div class="kanban-item-details">
                                <h3 class="kanban-item-title kanban-item-title-completed">@todo.Title</h3>
                                @if (!string.IsNullOrEmpty(todo.Description))
                                {
                                    <p class="kanban-item-description">@todo.Description</p>
                                }
                                <p class="kanban-item-date">Created: @todo.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="kanban-item-actions">
                                <form asp-action="ToggleComplete" asp-route-id="@todo.Id" method="post" class="inline">
                                    <button type="submit" class="btn-complete-completed">
                                        <svg class="kanban-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                                <form asp-action="Delete" asp-route-id="@todo.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-delete-kanban">
                                        <svg class="kanban-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.dataset.todoId);
            ev.target.classList.add('dragging');
        }

        function drop(ev) {
            ev.preventDefault();
            const todoId = ev.dataTransfer.getData("text");
            
            // Find the closest kanban column
            let targetColumn = ev.target;
            while (targetColumn && !targetColumn.classList.contains('kanban-column')) {
                targetColumn = targetColumn.parentElement;
            }
            
            if (!targetColumn) return;

            // Remove dragging class from all items
            document.querySelectorAll('.kanban-item').forEach(item => {
                item.classList.remove('dragging');
            });

            const status = targetColumn.id.replace('-column', '');
            updateTodoStatus(todoId, status);
        }

        function updateTodoStatus(todoId, status) {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            fetch(`/Todo/UpdateStatus/${todoId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    console.error('Failed to update status:', response.status, response.statusText);
                    alert('Failed to update todo status. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating the todo status. Please try again.');
            });
        }

        // Add drag end event listener to remove dragging class
        document.addEventListener('dragend', function(ev) {
            if (ev.target.classList.contains('kanban-item')) {
                ev.target.classList.remove('dragging');
            }
        });
    </script>
} 